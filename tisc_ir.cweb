@* TISC Intermediate Representation for HanoiVM *@

@c
#include <stdint.h>
#include "t81types.h"

@<TISC Opcode Set@>=
typedef enum {
    TISC_OP_NOP = 0x00,
    TISC_OP_PUSH,
    TISC_OP_POP,
    TISC_OP_T81ADD,
    TISC_OP_T81SUB,
    TISC_OP_T81MUL,
    TISC_OP_T81DIV,
    TISC_OP_T81MOD,
    TISC_OP_TNN,
    TISC_OP_T81MATMUL,
    TISC_OP_FACT,
    TISC_OP_FIB,
    TISC_OP_TOWER,
    TISC_OP_BACKTRACK,
    TISC_OP_ACK,
    TISC_OP_BP,
    TISC_OP_HALT
} TISCOpcode;

@<TISC Instruction Format@>=
typedef struct {
    TISCOpcode op;
    int operand_count;
    uint81_t operands[3];
    int depth_hint; // optional: used for recursive awareness
} TISCInstruction;

@<TISC Program Buffer@>=
typedef struct {
    TISCInstruction* instructions;
    int length;
    int capacity;
} TISCProgram;

@<Function Prototypes@>=
void tisc_program_init(TISCProgram* prog);
void tisc_emit(TISCProgram* prog, TISCOpcode op, int operand_count, uint81_t* operands, int depth_hint);
void tisc_program_free(TISCProgram* prog);
