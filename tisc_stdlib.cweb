@* TISC Stdlib â€” Canonical Symbolic Macros for Recursive Ternary Programs *@

@* Introduction:
This file defines common symbolic macros as part of the TISC standard library.
These include patterns for AI, recursion, ternary matrix ops, and combinatorics.
They are callable from T81Lang programs or directly injected into HanoiVM. *@

@c
#include "tisc_ir.h"

@<Stdlib TISC Macro: Fibonacci Tail-Recursive (TISC_OP_FIB)@>=
void stdlib_fib_macro(TISCProgram* prog) {
    uint81_t dummy[1] = {{0}};
    tisc_emit(prog, TISC_OP_FIB, 0, dummy, 3);
}

@<Stdlib TISC Macro: Factorial (TISC_OP_FACT)@>=
void stdlib_fact_macro(TISCProgram* prog) {
    uint81_t dummy[1] = {{0}};
    tisc_emit(prog, TISC_OP_FACT, 0, dummy, 3);
}

@<Stdlib TISC Macro: Tower of Hanoi (TISC_OP_TOWER)@>=
void stdlib_tower_macro(TISCProgram* prog) {
    uint81_t dummy[1] = {{0}};
    tisc_emit(prog, TISC_OP_TOWER, 0, dummy, 4);
}

@<Stdlib TISC Macro: Matrix Multiply (T81)@>=
void stdlib_matmul_macro(TISCProgram* prog, uint81_t a, uint81_t b) {
    uint81_t args[2] = { a, b };
    tisc_emit(prog, TISC_OP_MATMUL, 2, args, 1);
}

@<Stdlib TISC Macro: TNN Accumulate (AI Weighted Layer)@>=
void stdlib_tnn_macro(TISCProgram* prog, uint81_t act, uint81_t weight) {
    uint81_t args[2] = { act, weight };
    tisc_emit(prog, TISC_OP_TNN, 2, args, 2);
}

@<TISC Stdlib Entry Points@>=
void tisc_stdlib_init(TISCProgram* prog) {
    stdlib_fib_macro(prog);
    stdlib_fact_macro(prog);
    stdlib_tower_macro(prog);
}
